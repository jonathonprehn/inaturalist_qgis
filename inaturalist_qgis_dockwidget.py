# -*- coding: utf-8 -*-
"""
/***************************************************************************
 INaturalistUserPluginDockWidget
                                 A QGIS plugin
 Facilitates data retrieval from iNaturalist directly into QGIS
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-02-03
        git sha              : $Format:%H$
        copyright            : (C) 2024 by Jonathon Prehn
        email                : 
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
import requests 

from qgis.PyQt import QtGui, QtWidgets, uic
from qgis.PyQt.QtCore import pyqtSignal


from qgis.core import (
    QgsApplication,
    QgsMessageLog
)

from .observations import (
    Observation,
    ObservationSearchQuery
)


FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'inaturalist_qgis_dockwidget_base.ui'))


class INaturalistUserPluginDockWidget(QtWidgets.QDockWidget, FORM_CLASS):

    closingPlugin = pyqtSignal()

    def __init__(self, parent=None):
        """Constructor."""
        super(INaturalistUserPluginDockWidget, self).__init__(parent)
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://doc.qt.io/qt-5/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)


        # initialize dock widget here 
        # named widgets from the .ui file can be accessed here

        self.pluginClass = None
        self.apiKey = None  # this is only needed for PUT and POST requests, which won't be done by this really
        self.apiRoot = "https://api.inaturalist.org/v1/"  # this won't change
        self.activeObservationQuery = None
        self.btnQueryData.pressed.connect(self.query_observations)



    # should this go into a singleton instead?
    def query_observations(self):
        if self.activeObservationQuery is None:
            self.activeObservationQuery = ObservationSearchQuery(self.apiRoot)

        QgsApplication.instance().messageLog().logMessage("Ran INaturalistUserPluginDockWidget.query_observations")




    def closeEvent(self, event):
        self.closingPlugin.emit()
        event.accept()


    def setPluginObject(self, plugin):
        self.pluginClass = plugin 

    def getPluginObject(self):
        return self.pluginClass
